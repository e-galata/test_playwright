name: Run Tests with Quality Gate

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and tag Docker image
        run: |
          docker build -t test-playwright .
          docker tag test-playwright test-playwright:latest

      - name: Run tests
        id: run_tests
        run: |
          docker run --rm \
            --name test-container \
            -v $(pwd)/allureres:/app/allureres \
            test-playwright:latest \
            pytest -s -v ./tests --alluredir=./allureres

      - name: Install Allure CLI
        if: always()
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -zxvf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          echo "/opt/allure/bin" >> $GITHUB_PATH

      - name: Generate Allure report
        if: always()
        run: |
          allure generate allureres -o allure-report --clean

      - name: Analyze Allure report
        id: quality_gate
        if: always()
        run: |
          sudo apt-get install -y jq
          
          TOTAL=$(jq -r '.statistic.total' allure-report/widgets/summary.json)
          PASSED=$(jq -r '.statistic.passed' allure-report/widgets/summary.json)
          RATE=$(( PASSED * 100 / TOTAL ))
          
          echo "Test pass rate: $RATE%"
          echo "rate=$RATE" >> $GITHUB_OUTPUT
          
          # Quality Gate (минимум 40% успешных)
          [ "$RATE" -ge 40 ] || { echo "::error::Quality Gate failed: $RATE% < 90%"; exit 1; }

      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report/
          retention-days: 7

      - name: Show result
        if: always()
        run: |
          echo "Quality Gate status: ${{ steps.quality_gate.outcome }}"
          echo "Pass rate: ${{ steps.quality_gate.outputs.rate }}%"
